---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: ratelimitconfigs.kaswfy.kaswfy.io
spec:
  group: kaswfy.kaswfy.io
  names:
    kind: RateLimitConfig
    listKind: RateLimitConfigList
    plural: ratelimitconfigs
    singular: ratelimitconfig
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RateLimitConfigSpec defines the desired state of RateLimitConfig
            properties:
              clusterName:
                description: ClusterName is the name of the cluster
                type: string
              deploymentName:
                description: DeploymentName is the target Deployment for rate limiting
                type: string
              egressPort:
                description: EgressPort specifies the port for egress traffic (optional)
                format: int32
                type: integer
              envoyPort:
                description: EnvoyPort specifies the port Envoy listens on (optional,
                  defaults to 8080)
                format: int32
                type: integer
              headerRateLimits:
                description: HeaderRateLimits defines rate limits based on headers
                items:
                  description: HeaderRateLimit defines rate limits for a specific
                    header
                  properties:
                    headerName:
                      description: HeaderName is the name of the header
                      type: string
                    rps:
                      description: Rps is the rate limit in requests per second
                      format: int32
                      type: integer
                  required:
                  - headerName
                  - rps
                  type: object
                type: array
              ingressPort:
                description: IngressPort specifies the port for ingress traffic (optional)
                format: int32
                type: integer
              maxRequestsByIpRps:
                description: MaxRequestsByIpRps limits requests per IP (optional)
                format: int32
                type: integer
              maxRequestsByLikeRouteRps:
                description: MaxRequestsByLikeRouteRps limits requests per similar
                  route pattern (optional)
                format: int32
                type: integer
              maxRequestsByUserRps:
                description: MaxRequestsByUserRps limits requests per user (optional,
                  requires user ID header)
                format: int32
                type: integer
            required:
            - clusterName
            - deploymentName
            type: object
          status:
            description: RateLimitConfigStatus defines the observed state of RateLimitConfig
            properties:
              applied:
                description: Applied indicates if rate limiting has been enforced
                type: boolean
            required:
            - applied
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
